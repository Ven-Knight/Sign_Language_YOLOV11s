name: Sign Language YOLOv11 CI/CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  ci-checks:
    name   : Continuous Integration
    runs-on: ubuntu-latest
    steps  :
      - name : Checkout Repository
        uses : actions/checkout@v3

      - name : Lint Codebase
        run  : echo "Linting code..."

      - name : Run Unit Tests
        run  : echo "Running unit tests..."

  build-and-push-ecr:
    name   : Build & Push Docker Image to ECR
    needs  : ci-checks
    runs-on: ubuntu-latest
    steps  :
      - name : Checkout Repository
        uses : actions/checkout@v3

      - name : Install System Utilities
        run  : |
               sudo apt-get update
               sudo apt-get install -y jq unzip

      - name : Configure AWS Credentials
        uses : aws-actions/configure-aws-credentials@v1
        with :
                aws-access-key-id     : ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region            : ${{ secrets.AWS_REGION }}

      - name : Login to Amazon ECR
        id   : login-ecr
        uses : aws-actions/amazon-ecr-login@v1

      - name : Build and Push Docker Image
        env  :
                ECR_REGISTRY   : ${{ steps.login-ecr.outputs.registry }}
                ECR_REPOSITORY : ${{ secrets.ECR_REPOSITORY_NAME }}
                IMAGE_TAG      : latest
        run  : |
               docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
               docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
               echo "Image pushed: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  deploy-to-host:
    name   : Deploy to Self-Hosted Server
    needs  : build-and-push-ecr
    runs-on: self-hosted
    steps  :
      - name : Checkout Repository
        uses : actions/checkout@v3

      - name : Configure AWS Credentials
        uses : aws-actions/configure-aws-credentials@v1
        with :
              aws-access-key-id     : ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region            : ${{ secrets.AWS_REGION }}

      - name : Login to Amazon ECR
        uses : aws-actions/amazon-ecr-login@v1

      - name : Pull Latest Docker Image
        run  : |
               docker pull ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      - name : Stop and remove container if running
        run  : |
               docker ps -q --filter "name=signlang" | grep -q . && docker stop signlang && docker rm -fv signlang || echo "No existing container to stop"

      - name : Run Docker Container
        run  : |
              docker run -d -p 8080:8080 --ipc="host" --name=signlang \
                -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
                -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
                -e AWS_REGION=${{ secrets.AWS_REGION }} \
                ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      - name : Cleanup Docker Artifacts
        run  : docker system prune -f